#include<bits/stdc++.h>
using namespace std;

const int N=1e5+1;

int n,a[N],b[4*N];

void build(int v,int l,int r)
{
  if(l==r) b[v]=a[l];
  else
  { int mid=(l+r)/2;
    build(2*v,l,mid);
    build(2*v+1,mid+1,r);
    b[v] = b[2*v] + b[2*v+1];
   }
}

int compsum(int v,int ll,int rr,int l,int r)
{   if(l>r) return 0;
   if(l==ll&&rr==r)
    return b[v];
   int mid=(ll + rr)/2;
  return compsum(2*v,ll, mid,l,min(mid,r)) + compsum(2*v+1,mid+1,rr,max(mid+1,l),r);   
}
void update(int v,int l,int r,int id,int x)
{
  if(l==r) b[v]=x;
  else
  { int mid=(l+r)/2;
    if(id<=mid)
    update(2*v,l,mid,id,x);
    else
    update(2*v+1,mid+1,r,id,x);
   b[v] = b[2*v] + b[2*v+1];
  }
}

int main()
{ 
 cin>>n; for(int i=1;i<=n;i++) cin>>a[i]; 
 build(1,1,n);
 int q,x,y; cin>>q;
 while(q--)
 {
  cin>>x;
  if(x==1)
  {
     cin>>x>>y;
     update(1,1,n,x,y);
   }
   else
   {
    cin>>x>>y;
    cout<<compsum(1,1,n,x,y);
    }
  }
  return 0;
 }
